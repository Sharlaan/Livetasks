{"version":3,"sources":["../../../src/public/js/TaskGroupView.js"],"names":["TaskGroupView","model","container","completionContainer","taskContainer","prototype","create","mainDiv","document","createElement","className","headerDiv","groupTitle","textContent","appendChild","completionDiv","title","actionsMenuButton","innerHTML","addEventListener","menu","parentElement","children","style","visibility","opacity","event","key","contains","relatedTarget","actionsMenu","stopPropagation","currentTarget","target","classList","content","prompt","createTask","taskList","id","status","insertPosition","task","dataset","ct","checkbox","firstChild","value","newChecked","JSON","parse","checked","updateTask","statusCheckbox","add","contentInput","maxLength","currentContent","cancel","readOnly","length","placeholder","isEditing","remove","newContent","blur","actionsBox","editButton","removeAttribute","focus","removeButton","confirmation","confirm","removeTask","element","insertBefore","finished_at","getElementById","removeChild","updateCompletion","taskRemainingCount","taskCount","Number","isFinite","toFixed"],"mappings":"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","file":"TaskGroupView.js","sourcesContent":["'use strict'\r\n/* eslint-disable camelcase */\r\n/**\r\n * Constructor\r\n * @param {TaskGroup} model - Linked model\r\n */\r\nfunction TaskGroupView (model) {\r\n  /**\r\n   * Container\r\n   * @type {DOMElement}\r\n   */\r\n  this.container = null\r\n\r\n  /**\r\n   * Linked model\r\n   * @type {TaskGroup}\r\n   */\r\n  this.model = model\r\n\r\n  /**\r\n   * Completion container to show task finished\r\n   * @type {DOMElement}\r\n   */\r\n  this.completionContainer = null\r\n\r\n  /**\r\n   * Task container\r\n   * @type {DOMElement}\r\n   */\r\n  this.taskContainer = null\r\n}\r\n\r\n/**\r\n * Create a new group of task\r\n * @param {DOMElement} container - Parent element\r\n * @return {boolean} True if everything was successful\r\n */\r\nTaskGroupView.prototype.create = function (container) {\r\n  let mainDiv = document.createElement('div')\r\n  mainDiv.className = 'task-container'\r\n  this.container = mainDiv\r\n\r\n  // Header div\r\n  const headerDiv = document.createElement('header')\r\n  headerDiv.className = 'task-group-header'\r\n\r\n  let groupTitle = document.createElement('h3')\r\n  groupTitle.className = 'task-group-title'\r\n  groupTitle.textContent = 'Project 1' // TODO: link this to group name from DB\r\n  headerDiv.appendChild(groupTitle)\r\n\r\n  let completionDiv = document.createElement('div')\r\n  completionDiv.className = 'completionDiv'\r\n  completionDiv.title = 'Remaining tasks'\r\n  headerDiv.appendChild(completionDiv)\r\n  this.completionContainer = completionDiv\r\n\r\n  let actionsMenuButton = document.createElement('button')\r\n  actionsMenuButton.innerHTML = '<i class=\"material-icons\">more_vert</i>'\r\n  actionsMenuButton.className = 'actionsMenuButton'\r\n  actionsMenuButton.addEventListener('click', function () {\r\n    const menu = this.parentElement.children[3]\r\n    menu.style.visibility = 'visible' // make this as class 'showMenu' ?\r\n    menu.style.opacity = 1\r\n  })\r\n  actionsMenuButton.addEventListener('keyup', function (event) {\r\n    const menu = this.parentElement.children[3]\r\n    if (event.key === 'Escape') {\r\n      menu.style.visibility = 'hidden' // make this as class 'closeMenu' ?\r\n      menu.style.opacity = 0\r\n    }\r\n  })\r\n  actionsMenuButton.addEventListener('blur', function (event) {\r\n    const menu = this.parentElement.children[3]\r\n    if (!menu.contains(event.relatedTarget)) {\r\n      menu.style.visibility = 'hidden' // make this as class 'closeMenu' ?\r\n      menu.style.opacity = 0\r\n    }\r\n  })\r\n  headerDiv.appendChild(actionsMenuButton)\r\n\r\n  let actionsMenu = document.createElement('div')\r\n  actionsMenu.innerHTML = `\r\n    <button class='create-group'>\r\n      <i class='material-icons'>playlist_add</i>\r\n      Create new group of tasks<br/>(un-implemented)\r\n    </button>\r\n    <button class='edit-group-title'>\r\n      <i class='material-icons'>input</i>\r\n      Edit this group's title<br/>(un-implemented)\r\n    </button>\r\n    <button class='add-new-task'>\r\n      <i class='material-icons'>add</i>\r\n      Add new task\r\n    </button>`\r\n  actionsMenu.className = 'actionsMenu'\r\n  // visibility+opacity hack necessary because 'transition' does not work with 'display'\r\n  actionsMenu.addEventListener('click', event => {\r\n    event.stopPropagation()\r\n    event.currentTarget.style.visibility = 'hidden' // make this as class 'closeMenu' ?\r\n    event.currentTarget.style.opacity = 0\r\n\r\n    if (event.target.classList.contains('add-new-task')) {\r\n      const content = prompt('Please type the content for this new task:') // eslint-disable-line no-undef\r\n      if (content) this.model.createTask(content)\r\n    }\r\n  })\r\n  headerDiv.appendChild(actionsMenu)\r\n\r\n  // TODO: Add input for edition of group title\r\n  // TODO: create new group button\r\n\r\n  mainDiv.appendChild(headerDiv)\r\n\r\n  // Task list\r\n  const taskList = document.createElement('ul')\r\n  taskList.className = 'task-list'\r\n  mainDiv.appendChild(taskList)\r\n  this.taskContainer = taskList\r\n\r\n  // Finally add to the DOM\r\n  container.appendChild(mainDiv)\r\n\r\n  return true\r\n}\r\n\r\n/**\r\n * Create a new task\r\n * @param {number} id - The task identifier\r\n * @param {string} content - The content of the task\r\n * @param {boolean} status - True to set as completed\r\n * @param {number} insertPosition - position in the tasks array at which to insert the newly created task\r\n */\r\nTaskGroupView.prototype.createTask = function (id, content, status, insertPosition = -1) {\r\n  let task = document.createElement('li')\r\n  task.className = 'task'\r\n  task.id = `task-${id}`\r\n  task.dataset.id = id\r\n  // TODO: see if the handler can be generic'ed\r\n  task.addEventListener('click', ({currentTarget: ct}) => {\r\n    // use e.currentTarget to be sure to use the attached node instead of e.target which can be some child\r\n    // use e.currentTarget when in lexical mode (arrow function), or this in normal function(event) mode\r\n    const checkbox = ct.firstChild\r\n    const id = ct.dataset.id\r\n    const content = ct.children[1].value\r\n    const newChecked = !JSON.parse(checkbox.dataset.checked) // /!\\ data-* value is always a string\r\n    // console.log('Event triggered @ TaskGroupView createTask: newChecked', checkbox)\r\n    this.model.updateTask(id, content, newChecked)\r\n  })\r\n\r\n  let statusCheckbox = document.createElement('div')\r\n  statusCheckbox.className = 'statusCheckbox'\r\n  statusCheckbox.dataset.checked = status\r\n  // TODO: use 'done_all' to check/uncheck all tasks at once\r\n  statusCheckbox.innerHTML = '<i class=\"material-icons\">done</i>'\r\n  if (!status) statusCheckbox.classList.add('hide')\r\n  /* ou\r\n   `<i class='material-icons'>\r\n      ${status ? 'check_box' : 'check_box_outline_blank'}\r\n    </i>` */\r\n  task.appendChild(statusCheckbox)\r\n\r\n  let contentInput = document.createElement('input')\r\n  contentInput.maxLength = 250\r\n  contentInput.dataset.currentContent = content\r\n  contentInput.dataset.cancel = false\r\n  contentInput.value = content\r\n  contentInput.readOnly = true\r\n  contentInput.className = 'taskContent'\r\n  if (!content.length) contentInput.placeholder = 'Write a task ...'\r\n  if (status) contentInput.classList.add('strike')\r\n  // Prevent triggering task.click() event, only when editing (bubbling propagation)\r\n  contentInput.addEventListener('click', function (event) {\r\n    const isEditing = !this.readOnly\r\n    if (isEditing) event.stopPropagation()\r\n  })\r\n  // Save previous value before user actually edit the value\r\n  contentInput.addEventListener('focus', function () {\r\n    const isEditing = !this.readOnly\r\n    if (isEditing) {\r\n      this.dataset.currentContent = this.value\r\n      this.classList.remove('strike')\r\n    }\r\n  })\r\n  contentInput.addEventListener('blur', ({currentTarget: ct}) => {\r\n    ct.readOnly = true\r\n    const task = ct.parentElement\r\n    const currentContent = ct.dataset.currentContent\r\n    const checkbox = task.firstChild\r\n    const id = task.dataset.id\r\n    const newContent = ct.value\r\n    const checked = JSON.parse(checkbox.dataset.checked) // /!\\ data-* value is always a string\r\n    if (checked) ct.classList.add('strike')\r\n    // Prevent useless server call and overwrite value with old value\r\n    if (JSON.parse(ct.dataset.cancel)) {\r\n      ct.value = currentContent\r\n      ct.dataset.cancel = false\r\n      return\r\n    }\r\n    // Prevent useless server call\r\n    if (newContent !== currentContent) {\r\n      // console.log('Event triggered @ TaskGroupView createTask: newContent', newContent)\r\n      this.model.updateTask(id, newContent, checked)\r\n    }\r\n  })\r\n  contentInput.addEventListener('keyup', function (event) {\r\n    switch (event.key) {\r\n      case 'Esc': // 'Escape' not recognised in Edge\r\n      case 'Escape':\r\n        this.dataset.cancel = true\r\n      // eslint-disable-next-line no-fallthrough\r\n      case 'Enter':\r\n        this.blur() // Triggers indirectly the contentInput blur event defined above\r\n        break\r\n      default: break\r\n    }\r\n  })\r\n  task.appendChild(contentInput)\r\n\r\n  let actionsBox = document.createElement('div')\r\n  actionsBox.className = 'actionsBox'\r\n  task.appendChild(actionsBox)\r\n\r\n  let editButton = document.createElement('button')\r\n  editButton.className = 'edit'\r\n  editButton.innerHTML = '<i class=\"material-icons\">mode_edit</i>' // or 'input'\r\n  editButton.title = 'Edit'\r\n  editButton.addEventListener('click', event => {\r\n    event.stopPropagation() // necessary to prevent triggering task.click() by bubbling\r\n    const task = event.currentTarget.parentElement.parentElement\r\n    const contentInput = task.children[1]\r\n    contentInput.removeAttribute('readonly')\r\n    contentInput.focus()\r\n  })\r\n  actionsBox.appendChild(editButton)\r\n\r\n  let removeButton = document.createElement('button')\r\n  removeButton.className = 'remove'\r\n  removeButton.innerHTML = '<i class=\"material-icons\">clear</i>'\r\n  removeButton.title = 'Delete'\r\n  removeButton.addEventListener('click', event => {\r\n    event.stopPropagation()\r\n    const confirmation = confirm('Are you sure to delete this task ?') // eslint-disable-line no-undef\r\n    const task = event.currentTarget.parentElement.parentElement\r\n    if (confirmation) this.model.removeTask(task.dataset.id)\r\n  })\r\n  actionsBox.appendChild(removeButton)\r\n\r\n  if (insertPosition !== -1) {\r\n    const element = this.taskContainer.children[insertPosition]\r\n    this.taskContainer.insertBefore(task, element)\r\n  } // eslint-disable-line brace-style\r\n  else this.taskContainer.appendChild(task)\r\n}\r\n\r\n/**\r\n * Update a task\r\n * @param {number} id - The task identifier\r\n * @param {string} content - Task content\r\n * @param {string} finished_at - Completion date\r\n */\r\nTaskGroupView.prototype.updateTask = function (id, content, finished_at) {\r\n  // TODO: onJustCreated, remove 1st temp task to insert it at correct position (without sorting the whole tasklist)\r\n  let task = document.getElementById(`task-${id}`)\r\n  if (!task) return\r\n  const statusCheckbox = task.firstChild\r\n  const contentInput = task.children[1]\r\n  const status = (finished_at !== null)\r\n  statusCheckbox.dataset.checked = status\r\n  if (status) {\r\n    statusCheckbox.classList.remove('hide')\r\n    contentInput.classList.add('strike')\r\n  } else {\r\n    statusCheckbox.classList.add('hide')\r\n    contentInput.classList.remove('strike')\r\n  }\r\n  contentInput.value = content\r\n}\r\n\r\n/**\r\n * Remove a task\r\n * @param {number} id - The task identifier\r\n */\r\nTaskGroupView.prototype.removeTask = function (id) {\r\n  const task = document.getElementById(`task-${id}`)\r\n  if (!task) return\r\n\r\n  this.taskContainer.removeChild(task)\r\n}\r\n\r\n/**\r\n * Update completion indicator\r\n * @param {number} taskRemainingCount - Amount of uncompleted task(s)\r\n * @param {number} taskCount - Task count\r\n */\r\nTaskGroupView.prototype.updateCompletion = function (taskRemainingCount, taskCount) {\r\n  this.completionContainer.innerHTML = `${taskRemainingCount} / ${taskCount}`\r\n  if (Number.isFinite(taskCount)) this.completionContainer.title = // eslint-disable-line curly\r\n    `Remaining tasks\r\n(completion ${(((taskCount - taskRemainingCount) / taskCount) * 100).toFixed(1)} %)`\r\n}\r\n"]}