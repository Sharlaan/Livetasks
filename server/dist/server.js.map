{"version":3,"sources":["../src/server.js"],"names":["app","server","listen","port","console","info","use","json","io","on","onError","error","syscall","bind","code","Error"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;AAEA;AACA;;;AAGA,MAAMA,MAAM,wBAAZ;AACA,MAAMC,SAASD,IAAIE,MAAJ,CAAW,iBAAOC,IAAlB,EAAwB,YAAY;AACjDC,UAAQC,IAAR,CAAc,gCAA+B,iBAAOF,IAAK,EAAzD;AACD;;AAED;AAJe,CAAf,CAKAH,IAAIM,GAAJ,CAAQ,uBAAR,CAAkB;AAAlB,EACAN,IAAIM,GAAJ,CAAQ,sBAAO,KAAP,CAAR,CAAuB;AAAvB,EACAN,IAAIM,GAAJ,CAAQ,4BAAR,CAAuB;AAAvB,EACAN,IAAIM,GAAJ,CAAQ,qBAAWC,IAAX,EAAR,CAA2B;AAA3B,EACAP,IAAIM,GAAJ,CAAQ,oBAAR,CAAe;AAAf,EACAN,IAAIM,GAAJ,CAAQ,qBAAR,CAAgB;;AAEhB;;;;AAFA,EAMA,MAAME,KAAK,sBAAWP,MAAX,CAAX;AACAO,GAAGC,EAAH,CAAM,SAAN;;AAEA;;;AAFA,EAKA,SAASC,OAAT,CAAkBC,KAAlB,EAAyB;AACvB,MAAIA,MAAMC,OAAN,KAAkB,QAAtB,EAAgC,MAAMD,KAAN;AAChC,QAAME,OAAO,CAAC,OAAOV,IAAP,KAAgB,QAAhB,GAA2B,OAA3B,GAAqC,OAAtC,IAAiD,iBAAOA,IAArE;;AAEA;AACA,UAAQQ,MAAMG,IAAd;AACE,SAAK,QAAL;AACE,YAAM,IAAIC,KAAJ,CAAW,GAAEF,IAAK,+BAAlB,CAAN;AACF,SAAK,YAAL;AACE,YAAM,IAAIE,KAAJ,CAAW,GAAEF,IAAK,oBAAlB,CAAN;AACF;AACE,YAAMF,KAAN;AANJ;AAQD","file":"server.js","sourcesContent":["import express from 'express'\r\nimport logger from 'morgan'\r\nimport helmet from 'helmet'\r\nimport hpp from 'hpp'\r\nimport cors from 'cors'\r\nimport compression from 'compression'\r\nimport bodyParser from 'body-parser'\r\nimport websockets from 'socket.io'\r\nimport { common } from './config/settings'\r\nimport router from './router'\r\n\r\n// TODO: turn into WSS with http://stackoverflow.com/a/38525463/3740223 (wait for NodeJSv8+ for http2 implemented in core)\r\n/**\r\n * Express server.\r\n */\r\nconst app = express()\r\nconst server = app.listen(common.port, function () {\r\n  console.info(`API server listening on port ${common.port}`)\r\n})\r\n\r\n// Middlewares\r\napp.use(helmet()) // app.disable('x-powered-by')\r\napp.use(logger('dev')) // logs every request to the console\r\napp.use(compression()) // gzip compression\r\napp.use(bodyParser.json()) // parses bodies with content-type = 'application/json'\r\napp.use(hpp()) // anti-HTTP Parameter Pollution\r\napp.use(cors()) // Enable Cross-Origin Resource Sharing\r\n\r\n/**\r\n * Attach Websockets API to the Express server\r\n * for push notifications.\r\n */\r\nconst io = websockets(server)\r\nio.on('connect', router)\r\n\r\n/**\r\n * Event listener for HTTP server \"error\" event.\r\n */\r\nfunction onError (error) {\r\n  if (error.syscall !== 'listen') throw error\r\n  const bind = (typeof port === 'string' ? 'Pipe ' : 'Port ') + common.port\r\n\r\n  // handle specific listen errors with friendly messages\r\n  switch (error.code) {\r\n    case 'EACCES':\r\n      throw new Error(`${bind} requires elevated privileges`)\r\n    case 'EADDRINUSE':\r\n      throw new Error(`${bind} is already in use`)\r\n    default:\r\n      throw error\r\n  }\r\n}\r\n"]}