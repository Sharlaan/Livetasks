{"version":3,"sources":["../src/router.js"],"names":["socket","console","log","broadcast","emit","on","pseudo","response","all","joinGroup","leaveGroup","create","update","remove","group"],"mappings":";;;;;;kBAIe,UAAUA,MAAV,EAAkB;AAC/BC,UAAQC,GAAR,CAAY,gBAAZ;AACAF,SAAOG,SAAP,CAAiBC,IAAjB,CAAsB,SAAtB,EAAiC,yBAAjC;;AAEAJ,SAAOK,EAAP,CAAU,cAAV,EAA0B,UAAUC,MAAV,EAAkBC,QAAlB,EAA4B;AACpD;AACA,SAAKD,MAAL,GAAcA,MAAd;AACA;AACA,QAAIA,MAAJ,EAAY,KAAKH,SAAL,CAAeC,IAAf,CAAoB,SAApB,EAAgC,GAAEE,MAAO;AACrD;AADY,MAEZ,IAAIC,QAAJ,EAAcA,SAASD,MAAT;AACf;;AAED;AATA,IAUAN,OAAOK,EAAP,CAAU,cAAV,EAA0B,2BAAiBG,GAA3C;;AAEAR,SAAOK,EAAP,CAAU,WAAV,EAAuB,2BAAiBI,SAAxC;;AAEAT,SAAOK,EAAP,CAAU,YAAV,EAAwB,2BAAiBK,UAAzC;;AAEAV,SAAOK,EAAP,CAAU,aAAV,EAAyB,2BAAiBM,MAA1C;;AAEAX,SAAOK,EAAP,CAAU,aAAV,EAAyB,2BAAiBO,MAA1C;;AAEAZ,SAAOK,EAAP,CAAU,aAAV,EAAyB,2BAAiBQ;;AAE1C;AAFA,IAGAb,OAAOK,EAAP,CAAU,aAAV,EAAyB,0BAAgBG,GAAzC;;AAEAR,SAAOK,EAAP,CAAU,YAAV,EAAwB,0BAAgBM,MAAxC;;AAEAX,SAAOK,EAAP,CAAU,YAAV,EAAwB,0BAAgBO,MAAxC;;AAEAZ,SAAOK,EAAP,CAAU,YAAV,EAAwB,0BAAgBQ;;AAExC;AAFA,IAGAb,OAAOK,EAAP,CAAU,gBAAV,EAA4B,0BAAgBG,GAA5C;;AAEAR,SAAOK,EAAP,CAAU,aAAV,EAAyB,0BAAgBM,MAAzC;;AAEAX,SAAOK,EAAP,CAAU,eAAV,EAA2B,0BAAgBO,MAA3C;;AAEAZ,SAAOK,EAAP,CAAU,eAAV,EAA2B,0BAAgBQ,MAA3C;;AAEAb,SAAOK,EAAP,CAAU,cAAV,EAA0B,YAAY;AACpCJ,YAAQC,GAAR,CAAa,GAAE,KAAKI,MAAO,eAA3B;AACA,SAAKH,SAAL,CAAeC,IAAf,CAAoB,cAApB,EAAqC,GAAE,KAAKE,MAAO,eAAnD;AACA,SAAKA,MAAL,GAAc,IAAd;AACA,SAAKQ,KAAL,GAAa,IAAb;AACD,GALD;AAMD,C;;AAtDD;;;;AACA;;;;AACA","file":"router.js","sourcesContent":["import groupsController from './controllers/GroupsController'\r\nimport tasksController from './controllers/TasksController'\r\nimport tchatController from './controllers/TchatController'\r\n\r\nexport default function (socket) {\r\n  console.log('client connect')\r\n  socket.broadcast.emit('newUser', 'New user just connected')\r\n\r\n  socket.on('registerUser', function (pseudo, response) {\r\n    // store the pseudo in the socket session for this client\r\n    this.pseudo = pseudo\r\n    // echo globally (all clients) that a person has connected\r\n    if (pseudo) this.broadcast.emit('newUser', `${pseudo} just connected`)\r\n    // confirm user that he registered successfully\r\n    if (response) response(pseudo)\r\n  })\r\n\r\n  // Groups\r\n  socket.on('getAllGroups', groupsController.all)\r\n\r\n  socket.on('joinGroup', groupsController.joinGroup)\r\n\r\n  socket.on('leaveGroup', groupsController.leaveGroup)\r\n\r\n  socket.on('createGroup', groupsController.create)\r\n\r\n  socket.on('updateGroup', groupsController.update)\r\n\r\n  socket.on('removeGroup', groupsController.remove)\r\n\r\n  // Tasks\r\n  socket.on('getAllTasks', tasksController.all)\r\n\r\n  socket.on('createTask', tasksController.create)\r\n\r\n  socket.on('updateTask', tasksController.update)\r\n\r\n  socket.on('removeTask', tasksController.remove)\r\n\r\n  // Tchat\r\n  socket.on('getAllMessages', tchatController.all)\r\n\r\n  socket.on('sendMessage', tchatController.create)\r\n\r\n  socket.on('updateMessage', tchatController.update)\r\n\r\n  socket.on('removeMessage', tchatController.remove)\r\n\r\n  socket.on('onDisconnect', function () {\r\n    console.log(`${this.pseudo} disconnected`)\r\n    this.broadcast.emit('onDisconnect', `${this.pseudo} disconnected`)\r\n    this.pseudo = null\r\n    this.group = null\r\n  })\r\n}\r\n"]}